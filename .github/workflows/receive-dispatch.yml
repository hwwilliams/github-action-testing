name: receive-dispatch

env:
  ISSUE_TITLE_PREFIX: Workflow Failed

on:
  workflow_dispatch:
    inputs:
      FAILED_WORKFLOW_REPO_NAME:
        required: true
        type: string
      FAILED_WORKFLOW_RUN_ID:
        required: true
        type: string

jobs:
  receive-dispatch:
    runs-on: ubuntu-latest

    steps:
    - name: Get Failed Workflow Details and Logs
      shell: pwsh
      run: |
        Write-Output "Getting workflow logs from repo '${{ inputs.FAILED_WORKFLOW_REPO_NAME }}' and workflow with ID '${{ inputs.FAILED_WORKFLOW_RUN_ID }}'."

        # Get all jobs from workflow run
        $RunDetails = gh run -R https://github.com/${{ inputs.FAILED_WORKFLOW_REPO_NAME }} view ${{ inputs.FAILED_WORKFLOW_RUN_ID }}

        # Regex match failed job IDs
        $FailedJobIds = $RunDetails.ForEach({ [Regex]::Match($PSItem, '^X.+\(ID\s([0-9]+)\)') }).Where({ $PSItem.Success }).Groups.Where({ $PSItem.Name -eq 1 }).Value

        # Get failed job workflow logs
        $FailedJobLogs = $FailedJobIds.ForEach({ gh run -R https://github.com/${{ inputs.FAILED_WORKFLOW_REPO_NAME }} view -j $PSItem --log-failed }) | Sort-Object

        # Remove ANSI color codes from output
        $CleanFailedJobLogs = $FailedJobLogs.ForEach({ $PSItem -replace '\x1b\[[0-9;]*m','' })

        # Build GitHub issue body content
        $IssueBodyContent = @()
        $IssueBodyContent += '### Context'
        $IssueBodyContent += 'Repository: https://github.com/${{ inputs.FAILED_WORKFLOW_REPO_NAME }}'
        $IssueBodyContent += 'Failed Workflow Name: ${{ github.workflow }}'
        $IssueBodyContent += 'Failed Workflow Run: https://github.com/${{ inputs.FAILED_WORKFLOW_REPO_NAME }}/actions/runs/${{ inputs.FAILED_WORKFLOW_RUN_ID }}'
        $IssueBodyContent += ''
        $IssueBodyContent += '### Error'
        $IssueBodyContent += '```txt'
        $IssueBodyContent += $CleanFailedJobLogs
        $IssueBodyContent += '```'
        $IssueBodyContentPath = ".\IssueBodyContent.txt"
        $IssueBodyContent | Out-File -FilePath $IssueBodyContentPath -Force
      env:
        GH_TOKEN: ${{ secrets.GH_TOKEN_PAT }}

    - name: Create Failed Workflow Issue
      shell: pwsh
      run: |
        $IssueBodyContentPath = (Resolve-Path ".\IssueBodyContent.txt").Path
        gh issue create -R "https://github.com/${{ inputs.FAILED_WORKFLOW_REPO_NAME }}" `
          -t "${{ env.ISSUE_TITLE_PREFIX }} - ${{ inputs.FAILED_WORKFLOW_REPO_NAME }}" `
          -F $IssueBodyContentPath -l bug
      env:
        GH_TOKEN: ${{ github.token }}
