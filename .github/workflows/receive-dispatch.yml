name: receive-dispatch

on:
  workflow_dispatch:
    inputs:
      repo_name:
        required: true
        type: string
      workflow_run_id:
        required: true
        type: string

jobs:
  receive-dispatch:
    runs-on: ubuntu-latest

    steps:
    - name: Get Failed Workflow Details and Logs
      shell: pwsh
      run: |
        Write-Output "Getting workflow logs from repo '${{ inputs.repo_name }}' and workflow with ID '${{ inputs.workflow_run_id }}'."

        # Get all jobs from workflow run
        $RunDetails = gh run -R https://github.com/${{ inputs.repo_name }} view ${{ inputs.workflow_run_id }}

        # Regex match failed job IDs
        $FailedJobIds = $RunDetails.ForEach({ [Regex]::Match($PSItem, '^X.+\(ID\s([0-9]+)\)') }).Where({ $PSItem.Success }).Groups[1].Value

        # Get failed job workflow logs
        $FailedJobLogs = $FailedJobIds.ForEach({ gh run -R https://github.com/${{ inputs.repo_name }} view -j $PSItem --log-failed })

        # Remove ANSI color codes from output
        $CleanFailedJobLogs = $FailedJobLogs.ForEach({ $PSItem -replace '\x1b\[[0-9;]*m','' })

        # Build GitHub issue body content
        $IssueBodyContent = @'
          ### Context
          Repository: https://github.com/${{ inputs.repo_name }}
          Failed Workflow Run: https://github.com/${{ inputs.repo_name }}/actions/runs/${{ inputs.workflow_run_id }}
          Failed Workflow name: ${{ github.workflow }}

          ### Error
          ```txt
          $CleanFailedJobLogs
          ```
        '@
        # $IssueBodyContent += '### Context'
        # $IssueBodyContent += 'Repository: https://github.com/${{ inputs.repo_name }}'
        # $IssueBodyContent += 'Failed Workflow Run: https://github.com/${{ inputs.repo_name }}/actions/runs/${{ inputs.workflow_run_id }}'
        # $IssueBodyContent += 'Failed Workflow name: ${{ github.workflow }}'
        # $IssueBodyContent += ''
        # $IssueBodyContent += '### Error'
        # $IssueBodyContent += '```txt'
        # $IssueBodyContent += $CleanFailedJobLogs
        # $IssueBodyContent += '```'
        $IssueBodyContentPath = ".\IssueBodyContent.txt"
        $IssueBodyContent | Out-File -FilePath $IssueBodyContentPath -Force
      env:
        GH_TOKEN: ${{ secrets.GH_TOKEN_PAT }}

    - name: Create Failed Workflow Issue
      shell: pwsh
      run: |
        $IssueBodyContentPath = (Resolve-Path ".\IssueBodyContent.txt").Path
        gh issue create -R "https://github.com/${{ inputs.repo_name }}" `
          -t "Workflow Failed - ${{ inputs.repo_name }}" `
          -F $IssueBodyContentPath -l bug
      env:
        GH_TOKEN: ${{ github.token }}
