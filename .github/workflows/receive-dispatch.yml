name: receive-dispatch

on:
  workflow_dispatch:
    inputs:
      repo_name:
        required: true
        type: string
      workflow_run_id:
        required: true
        type: string

jobs:
  receive-dispatch:
    runs-on: ubuntu-latest

    steps:
    - name: Print Message
      shell: pwsh
      run: |
        Write-Output "Received dispatch from repo '${{ inputs.repo_name }}' and workflow with ID '${{ inputs.workflow_run_id }}'."

    - name: Get Logs for Workflow
      shell: pwsh
      id: workflow_logs
      run: |
        Write-Output "Getting workflow logs from repo '${{ inputs.repo_name }}' and workflow with ID '${{ inputs.workflow_run_id }}'."
        $RunDetails = gh run -R https://github.com/${{ inputs.repo_name }} view ${{ inputs.workflow_run_id }}
        $FailedJobIds = $RunDetails.Where({ ($PSItem.StartsWith("X")) -and ($PSItem -ilike "*ID *") }).Split('(')[-1].Split(')')[0].Split('ID')[-1].Trim()
        $FailedLogs = foreach ($ID in $FailedJobIds)
        {
          gh run -R https://github.com/${{ inputs.repo_name }} view --job $ID --log-failed
        }
        Write-Output "Failed log count $($FailedLogs.Count)"
        Write-Output "Failed log string count $(($FailedLogs | Out-String).Count)"
        $CleanFailedLogs = $FailedLogs | Out-String
        echo "::set-output name=logs::$FailedLogs"
      env:
        GH_TOKEN: ${{ secrets.GH_TOKEN_PAT }}

    - name: Create Issue for Workflow
      uses: dacbd/create-issue-action@main
      with:
        token: ${{ github.token }}
        repo: ${{ github.context.repo.repo }}
        labels: bug
        title: Workflow Failed - ${{ inputs.repo_name }}
        body: |
          ### Context
          Repo: https://github.com/${{ inputs.repo_name }}
          Failed Workflow: https://github.com/${{ inputs.repo_name }}/actions/runs/${{ inputs.workflow_run_id }}
          Workflow name: ${{ github.workflow }}
          Error: ${{ steps.workflow_logs.outputs.logs }}
