name: receive-dispatch

on:
  workflow_dispatch:
    inputs:
      repo_name:
        required: true
        type: string
      workflow_run_id:
        required: true
        type: string

jobs:
  receive-dispatch:
    runs-on: ubuntu-latest

    steps:
    - name: Get Failed Workflow Details and Logs
      shell: pwsh
      run: |
        Write-Output "Getting workflow logs from repo '${{ inputs.repo_name }}' and workflow with ID '${{ inputs.workflow_run_id }}'."
        $RunDetails = gh run -R https://github.com/${{ inputs.repo_name }} view ${{ inputs.workflow_run_id }}
        $FailedJobIds = $RunDetails.Where({ ($PSItem.StartsWith("X")) -and ($PSItem -ilike "*ID *") }).Split('(')[-1].Split(')')[0].Split('ID')[-1].Trim()
        $FailedJobLogs = foreach ($ID in $FailedJobIds) { gh run -R https://github.com/${{ inputs.repo_name }} view --job $ID --log-failed }
        $CleanFailedJobLogs = $FailedJobLogs.ForEach({ $PSItem -replace '\x1b\[[0-9;]*m','' })
        $IssueBodyContent = ".\IssueBodyContent.txt"

        # '### Context' | Out-File -FilePath $IssueBodyContent -Force
        # 'Repo: https://github.com/${{ inputs.repo_name }}' | Out-File -FilePath $IssueBodyContent -Append
        # 'Failed Workflow: https://github.com/${{ inputs.repo_name }}/actions/runs/${{ inputs.workflow_run_id }}' | Out-File -FilePath $IssueBodyContent -Append
        # 'Workflow name: ${{ github.workflow }}' | Out-File -FilePath $IssueBodyContent -Append
        # '' | Out-File -FilePath $IssueBodyContent -Append
        # '### Error' | Out-File -FilePath $IssueBodyContent -Append
        # '```txt' | Out-File -FilePath $IssueBodyContent -Append
        # $CleanFailedJobLogs | Out-File -FilePath $IssueBodyContent -Append
        # '```' | Out-File -FilePath $IssueBodyContent -Append

        $BodyContent = @()
        $BodyContent += '### Context'
        $BodyContent += 'Repo: https://github.com/${{ inputs.repo_name }}'
        $BodyContent += 'Failed Workflow: https://github.com/${{ inputs.repo_name }}/actions/runs/${{ inputs.workflow_run_id }}'
        $BodyContent += 'Workflow name: ${{ github.workflow }}'
        $BodyContent += ''
        $BodyContent += '### Error'
        $BodyContent += '```txt'
        $BodyContent += $CleanFailedJobLogs
        $BodyContent += '```'
        $BodyContent | Out-File -FilePath $IssueBodyContent -Force
      env:
        GH_TOKEN: ${{ secrets.GH_TOKEN_PAT }}

    - name: Create Issue
      shell: pwsh
      run: |
        $IssueBodyContent = (Resolve-Path ".\IssueBodyContent.txt").Path
        gh issue create -R "https://github.com/${{ inputs.repo_name }}" --title "Workflow Failed - ${{ inputs.repo_name }}" --body-file $IssueBodyContent
      env:
        GH_TOKEN: ${{ github.token }}
